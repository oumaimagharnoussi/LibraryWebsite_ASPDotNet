@model LibraryWebsite.ViewModel.UtilisateurViewModel

@{
    ViewBag.Title = "Signup";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Signup</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Adresse, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Adresse, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Adresse, "", new { @class = "text-danger" })
        </div>
    </div>

    @if ((string)Session["Role"] == "admin")
    {
        <div class="form-group">
            @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Role, new SelectList(new List<SelectListItem>
                {
                    new SelectListItem { Text = "User", Value = "user"},
                    new SelectListItem { Text = "Manager", Value = "manager"},
                    new SelectListItem { Text = "Admin", Value = "admin"}
                }, "Value", "Text", 1),new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
            </div>
        </div>
    }



    @*
        <div class="form-group">
            @Html.LabelFor(model => model.SelectedUtilisateurRole, "Utilisateur Role", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.SelectedUtilisateurRole,
                        (SelectList)ViewBag.SelectedUtilisateurRole,
                        Mode
        
        
        
        
        
        
        l.SelectedUtilisateurRole);
                @Html.ValidationMessageFor(model => model.SelectedUtilisateurRole)
            </div>
        </div>
    *@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Signup" class="btn btn-default" />
        </div>
    </div>
</div>
}
@if ((string)Session["Role"] == "admin")
{
    <div class="btn btn-secondary">
        @Html.ActionLink("Back to List", "Index")
    </div>
}
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
